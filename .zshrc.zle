# move cursor between chars when typing '', "", (), [], and {}
magic-single-quotes()   { if [[ $LBUFFER[-1] == \' ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \' magic-single-quotes
magic-double-quotes()   { if [[ $LBUFFER[-1] == \" ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \" magic-double-quotes
magic-parentheses()     { if [[ $LBUFFER[-1] == \( ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \) magic-parentheses
magic-square-brackets() { if [[ $LBUFFER[-1] == \[ ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \] magic-square-brackets
magic-curly-brackets()  { if [[ $LBUFFER[-1] == \{ ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \} magic-curly-brackets
magic-angle-brackets()  { if [[ $LBUFFER[-1] == \< ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \> magic-angle-brackets
zle -N magic-single-quotes
zle -N magic-double-quotes
zle -N magic-parentheses
zle -N magic-square-brackets
zle -N magic-curly-brackets
zle -N magic-angle-brackets

# escape URLs automagically
autoload -U url-quote-magic
zle -N self-insert url-quote-magic

# "ctrl-e e" : open iZLE buffer in $EDITOR
autoload      edit-command-line
zle -N        edit-command-line
bindkey '^ee' edit-command-line
bindkey '^e^e' edit-command-line

## This function allows you type a file pattern,
## and see the results of the expansion at each step.
## When you hit return, they will be inserted into the command line.
autoload -U   insert-files
zle -N        insert-files
bindkey "^Xf" insert-files ## C-x-f

# "ctrl-e r" : search backwards using globbing
autoload -U   history-pattern-search
zle -N        history-pattern-search-backward history-pattern-search
bindkey '^er' history-pattern-search-backward

## Allow known mime types to be used as 'command'
autoload -U zsh-mime-setup
zsh-mime-setup

# Show what the completion system is trying to complete with at a given point
bindkey '^Xh' _complete_help

# "ctrl-x t" : tetris
autoload -U   tetris
zle -N        tetris
bindkey "^et" tetris ## C-x-t to play

# My own completions

compdef _options toggleopt      # tab completion for toggleopt
compdef _mkdir   mcd            # tab completion for mcd

# "alt-h" : run run-help.
# fancy stuff like "git add" starting man git-add works
autoload run-help
